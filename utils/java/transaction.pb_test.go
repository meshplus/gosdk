package java

import (
	"github.com/golang/protobuf/proto"
	"testing"
)

func Test_InvalidTransactionRecords(t *testing.T) {
	itr := new(InvalidTransactionRecords)
	_ = itr.String()
	itr.Descriptor()
	itr.Reset()
	itr.ProtoMessage()
	itr.XXX_DiscardUnknown()
	//nolint
	itr.XXX_Marshal([]byte("hyperchain"), false)
	itr.XXX_Size()
	itr.XXX_Merge(*new(proto.Message))
	//nolint
	_ = itr.XXX_Unmarshal([]byte(""))
	itr.XXX_DiscardUnknown()
	itrr := new(InvalidTransactionRecord)
	_ = itrr.String()
	itrr.Descriptor()
	itrr.Reset()
	itrr.ProtoMessage()
	itrr.XXX_DiscardUnknown()
	_, _ = itrr.XXX_Marshal([]byte("hyperchain"), false)
	itrr.XXX_Size()
	itrr.XXX_Merge(*new(proto.Message))
	_ = itrr.XXX_Unmarshal([]byte(""))
	itrr.XXX_DiscardUnknown()

}

func Test_Transaction(t *testing.T) {
	itr := new(Transaction)
	_ = itr.String()
	itr.Descriptor()
	itr.Reset()
	itr.ProtoMessage()
	itr.XXX_DiscardUnknown()
	_, _ = itr.XXX_Marshal([]byte("hyperchain"), false)
	itr.XXX_Size()
	itr.XXX_Merge(*new(proto.Message))
	_ = itr.XXX_Unmarshal([]byte(""))
	itr.XXX_DiscardUnknown()
	itr.GetNonce()
	itr.GetTimestamp()
	itr.GetFrom()
	itr.GetId()
	itr.GetOther()
	itr.GetSignature()
	itr.GetTo()
	itr.GetTransactionHash()
	itr.GetValue()
	itr.GetVersion()
	var itrr Transaction
	itrr.GetNonce()
	itrr.GetTimestamp()
	itrr.GetFrom()
	itrr.GetId()
	itrr.GetOther()
	itrr.GetSignature()
	itrr.GetTo()
	itrr.GetTransactionHash()
	itrr.GetValue()
	itrr.GetVersion()

}

func Test_TransactionWrapper(t *testing.T) {
	itr := new(TransactionWrapper)
	_ = itr.String()
	itr.Descriptor()
	itr.Reset()
	itr.ProtoMessage()
	itr.XXX_DiscardUnknown()
	_, _ = itr.XXX_Marshal([]byte("hyperchain"), false)
	itr.XXX_Size()
	itr.XXX_Merge(*new(proto.Message))
	_ = itr.XXX_Unmarshal([]byte(""))
	itr.XXX_DiscardUnknown()
	itrr := new(TransactionValue)
	_ = itrr.String()
	itrr.Descriptor()
	itrr.Reset()
	itrr.ProtoMessage()
	itrr.XXX_DiscardUnknown()
	_, _ = itrr.XXX_Marshal([]byte("hyperchain"), false)
	itrr.XXX_Size()
	itrr.XXX_Merge(*new(proto.Message))
	_ = itrr.XXX_Unmarshal([]byte(""))
	itrr.XXX_DiscardUnknown()
	itrr.GetPayload()
	itrr.GetAmount()
	itrr.GetEncryptedAmount()
	itrr.GetGasLimit()
	itrr.GetExtra()
	itrr.GetHomomorphicAmount()
	itrr.GetHomomorphicBalance()
	itrr.GetOp()
	itrr.GetPrice()
	itrr.GetVmType()
	_ = itrr.String()

}

func Test_InvokeArgsNonHash(t *testing.T) {
	itr := new(InvokeArgs)
	_ = itr.String()
	itr.Descriptor()
	itr.Reset()
	itr.ProtoMessage()
	itr.XXX_DiscardUnknown()
	_, _ = itr.XXX_Marshal([]byte("hyperchain"), false)
	itr.XXX_Size()
	itr.XXX_Merge(*new(proto.Message))
	_ = itr.XXX_Unmarshal([]byte(""))
	itr.XXX_DiscardUnknown()
	itrr := new(NonHash)
	_ = itrr.String()
	itrr.Descriptor()
	itrr.Reset()
	itrr.ProtoMessage()
	itrr.XXX_DiscardUnknown()
	_, _ = itrr.XXX_Marshal([]byte("hyperchain"), false)
	itrr.XXX_Size()
	itrr.XXX_Merge(*new(proto.Message))
	_ = itrr.XXX_Unmarshal([]byte(""))
	itrr.XXX_DiscardUnknown()

}
